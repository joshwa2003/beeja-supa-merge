version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: lms-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: lms
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - lms-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILDPLATFORM=linux/amd64
    platform: linux/amd64
    container_name: lms-backend
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/lms?authSource=admin
      - SHARP_IGNORE_GLOBAL_LIBVIPS=1
      - SHARP_FORCE_GLOBAL_LIBVIPS=false
    env_file:
      - ./backend/.env
    volumes:
      - backend_uploads:/app/uploads
      - ./backend:/app
      - /app/node_modules
    networks:
      - lms-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_uploads:
    driver: local

networks:
  lms-network:
    driver: bridge
